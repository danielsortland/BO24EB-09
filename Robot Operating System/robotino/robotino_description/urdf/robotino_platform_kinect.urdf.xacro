<?xml version="1.0"?>
<robot name="robotino" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="M_PI" value="3.14159" />
  <xacro:property name="M_SCALE" value="0.01" />
  <xacro:property name="HOKUYO_RADIUS" value="0.02" />
  <xacro:property name="HOKUYO_LENGTH" value="0.07" />

  <xacro:property name="cam_px" value="-0.087" />
  <xacro:property name="cam_pz" value="0.2870" />
  <xacro:property name="cam_py" value="-0.0125" />
  <xacro:property name="cam_or" value="0" />
  <xacro:property name="cam_op" value="0" />
  <xacro:property name="cam_oy" value="0" />
  <!-- main robotino body -->
  <link name="base_link">
    <inertial>
      <mass value="20" />
      <origin xyz="0 0 0" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    <visual>
      <origin rpy="0 0 1.570795" xyz="0.01 0 0" />
      <geometry>
        <mesh filename="file://$(find robotino_description)/models/robotino_description/meshes/parts/robotino_base.dae" scale="0.01 0.01 0.01" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.025" />
      <geometry>
        <cylinder length="0.05" radius="0.18" />
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
   <gazebo reference="base_link">
      <material>Gazebo/Grey</material>
      <gravity>true</gravity>
      <self_collide>false</self_collide>
      <sensor name='base_contact_sensor' type='contact'>
        <always_on>true</always_on>
        <update_rate>100.0</update_rate>
        <contact>
          <collision>base_link_collision</collision>
          <topic>base_bumper</topic>
        </contact>
        <plugin name="bumper_plugin" filename="libgazebo_ros_bumper.so">
          <ros>
            <namespace>robotino</namespace>
            <remapping>bumper_states:=base_bumper</remapping>
          </ros>
          <frame_name>base_link</frame_name>
        </plugin>
    </sensor>
  </gazebo>

  <link name="wheel0_link">
    <inertial>
      <mass value="0.00001" />
      <origin xyz="0 0 0" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="file://$(find robotino_description)/models/robotino_description/meshes/parts/robotino_wheel.dae" scale="0.01 0.01 0.01" />
      </geometry>
    </visual>
  </link>
  <gazebo reference="wheel0_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="wheel0_joint" type="continuous">
    <origin rpy="0 0 1.04719666667" xyz="0.065 0.11 0.04" />
    <axis xyz="-1 0 0" />
    <parent link="base_link" />
    <child link="wheel0_link" />
  </joint>
 <ros2_control name="wheel0_controller" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="wheel0_joint">
      <state_interface name="velocity" />
      <state_interface name="position" />
      <command_interface name="velocity" />
    </joint>
  </ros2_control>

  <link name="wheel1_link">
    <inertial>
      <mass value="0.00001" />
      <origin xyz="0 0 0" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="file://$(find robotino_description)/models/robotino_description/meshes/parts/robotino_wheel.dae" scale="0.01 0.01 0.01" />
      </geometry>
    </visual>
  </link>
  <gazebo reference="wheel1_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="wheel1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.13 0 0.04" />
    <axis xyz="1 0 0" />
    <parent link="base_link" />
    <child link="wheel1_link" />
  </joint>
 <ros2_control name="wheel1_controller" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="wheel1_joint">
      <state_interface name="velocity" />
      <state_interface name="position" />
      <command_interface name="velocity" />
    </joint>
  </ros2_control>
  <link name="wheel2_link">
    <inertial>
      <mass value="0.00001" />
      <origin xyz="0 0 0" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="file://$(find robotino_description)/models/robotino_description/meshes/parts/robotino_wheel.dae" scale="0.01 0.01 0.01" />
      </geometry>
    </visual>
  </link>
  <gazebo reference="wheel2_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="wheel2_joint" type="continuous">
    <origin rpy="0 0 -1.04719666667" xyz="0.065 -0.11 0.04" />
    <axis xyz="-1 0 0" />
    <parent link="base_link" />
    <child link="wheel2_link" />
  </joint>
 <ros2_control name="wheel2_controller" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="wheel2_joint">
      <state_interface name="velocity" />
      <state_interface name="position" />
      <command_interface name="velocity" />
    </joint>
  </ros2_control>
  <link name="command_bridge_link">
    <inertial>
      <mass value="0.00001" />
      <origin xyz="0 0 0" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <box size="0.25 0.11 0.16" />
      </geometry>
    </collision>
  </link>
  <joint name="command_bridge_joint" type="fixed">
    <origin rpy="0 0 1.570795" xyz="-0.05 0 0.13" />
    <parent link="base_link" />
    <child link="command_bridge_link" />
  </joint>
  <link name="anglebracketusb_link">
    <inertial>
      <mass value="0.00001" />
      <origin xyz="0 0 0" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="file://$(find robotino_description)/models/robotino_description/meshes/parts/angle_bracket_usb_hub.dae" scale="0.01 0.01 0.01" />
      </geometry>
    </visual>
  </link>
  <joint name="anglebracketusb_joint" type="fixed">
    <origin rpy="0 0 1.570795" xyz="0.008 0 0.137" />
    <parent link="base_link" />
    <child link="anglebracketusb_link" />
  </joint>
  <gazebo>
    <plugin name="holonomic_plugin" filename="libgazebo_ros_planar_move.so">
      <ros>
        <namespace>robotino</namespace>
        <!-- <remapping>cmd_vel:=custom_cmd_vel</remapping>
        <remapping>odom:=custom_odom</remapping> -->
      </ros>
      <update_rate>100</update_rate>
      <publish_rate>20</publish_rate>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>
  <!-- add platform -->
  <link name="platform_link">
    <inertial>
      <mass value="0.00001" />
      <origin xyz="0 0 0" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    <visual>
      <origin xyz="0 0 0.29" />
      <geometry>
        <cylinder length="0.58" radius="0.04" />
      </geometry>
    </visual>
    <visual>
      <origin xyz="0 0 0.58" />
      <geometry>
        <!-- actual length = 0.015 -->
        <cylinder length="0.02" radius="0.22" />
      </geometry>
    </visual>
  </link>
  <joint name="platform_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.13" />
    <parent link="base_link" />
    <child link="platform_link" />
  </joint>

  <!-- add hokuyo -->
  <joint name="hokuyo_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.06 0 0.194" />
    <parent link="base_link" />
    <child link="hokuyo_link" />
  </joint>
  <link name="hokuyo_link">
    <inertial>
      <mass value="0.00001" />
      <origin xyz="0 0 0" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}" />
      <geometry>
        <mesh filename="file://$(find robotino_description)/models/robotino_description/meshes/sensors/hokuyo.dae" scale="${M_SCALE} ${M_SCALE} ${M_SCALE}" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 ${HOKUYO_LENGTH/2}" rpy="0 0 0" />
      <geometry>
        <cylinder radius="${HOKUYO_RADIUS}" length="${HOKUYO_LENGTH}" />
      </geometry>
    </collision>
  </link>
  <gazebo reference="hokuyo_link">
    <sensor name="hokuyo_sensor" type="ray">
    <visualize>true</visualize>
    <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <update_rate>30</update_rate>

      <plugin name="hokuyo_plugin" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>robotino</namespace>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>hokuyo_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
</robot>
